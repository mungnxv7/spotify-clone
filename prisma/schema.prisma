// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model tracks {
  id           Int      @id @default(autoincrement())
  artist_id    Int
  thumbnail    String
  name         String
  popularity   Int?
  color_bg     String
  type         String
  slug         String
  track_url    String
  duration     String   @default("0")
  play_nummber Int      @default(0)
  create_at    DateTime @default(now())
  update_at    DateTime @default(now())

  artist artists @relation(fields: [artist_id], references: [id])
}

model artists {
  id         Int      @id @default(autoincrement())
  name       String
  thumbnail  String
  banner     String
  popularity Int
  type       String
  slug       String
  create_at  DateTime @default(now())
  update_at  DateTime @default(now())

  track tracks[]
}

model genres {
  id        Int      @id @default(autoincrement())
  name      String
  thumbnail String
  color_bg  String
  slug      String
  create_at DateTime @default(now())
  update_at DateTime @default(now())
}

// model Albums {
//   id        Int      @id @default(autoincrement())
//   artist_id Int
//   name      String
//   thumbnail String
//   color_bg  String
//   type      String
//   slug      String
//   create_at DateTime @default(now())
//   update_at DateTime @default(now())

//   album_track Album_Track[]
//   artist      Artists       @relation(fields: [artist_id], references: [id])
// }

// model Track_Genre {
//   id       Int @id @default(autoincrement())
//   track_id Int
//   genre_id Int

//   genre Genres @relation(fields: [genre_id], references: [id])
//   track Tracks @relation(fields: [track_id], references: [id])
// }

// model Album_Track {
//   id       Int @id @default(autoincrement())
//   track_id Int
//   album_id Int

//   album Albums @relation(fields: [album_id], references: [id])
//   track Tracks @relation(fields: [track_id], references: [id])
// }
